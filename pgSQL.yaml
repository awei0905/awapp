apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    creationTimestamp: null
    name: postgres
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 2Gi
    hostPath:
      path: /data/postgres
      type: ""
    persistentVolumeReclaimPolicy: Retain
    storageClassName: standard
    volumeMode: Filesystem
  status:
    phase: Pending
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    name: postgres
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    volumeMode: Filesystem
    volumeName: postgres
  status:
    phase: Pending
- apiVersion: v1
  data:
    POSTGRES_PASSWORD: cGFzc3dvcmQ=
    POSTGRES_USER: cG9zdGdyZXM=
  kind: Secret
  metadata:
    creationTimestamp: null
    name: postgres
  type: Opaque
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: null
    labels:
      app: postgres
      role: service
    name: postgres
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres
        role: service
    serviceName: postgres
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgres
          role: service
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: POSTGRES_USER
                name: postgres
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: postgres
          image: postgres:9.6
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 0
    replicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: postgres
      role: service
    name: postgres
  spec:
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ports:
    - name: postgres
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgres
      role: service
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
kind: List
metadata: {}
